swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /complemento/:
    get:
      tags:
      - complemento
      description: get Complemento
      operationId: ComplementoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Complemento'
        "403":
          description: ""
    post:
      tags:
      - complemento
      description: create Complemento
      operationId: ComplementoController.Post
      parameters:
      - in: body
        name: body
        description: body for Complemento content
        required: true
        schema:
          $ref: '#/definitions/models.Complemento'
      responses:
        "201":
          description: '{int} models.Complemento'
        "403":
          description: body is empty
  /complemento/{id}:
    get:
      tags:
      - complemento
      description: get Complemento by id
      operationId: ComplementoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Complemento'
        "403":
          description: :id is empty
    put:
      tags:
      - complemento
      description: update the Complemento
      operationId: ComplementoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Complemento content
        required: true
        schema:
          $ref: '#/definitions/models.Complemento'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Complemento'
        "403":
          description: :id is not int
    delete:
      tags:
      - complemento
      description: delete the Complemento
      operationId: ComplementoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /complemento_institucion/:
    get:
      tags:
      - complemento_institucion
      description: get ComplementoInstitucion
      operationId: ComplementoInstitucionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ComplementoInstitucion'
        "403":
          description: ""
    post:
      tags:
      - complemento_institucion
      description: create ComplementoInstitucion
      operationId: ComplementoInstitucionController.Post
      parameters:
      - in: body
        name: body
        description: body for ComplementoInstitucion content
        required: true
        schema:
          $ref: '#/definitions/models.ComplementoInstitucion'
      responses:
        "201":
          description: '{int} models.ComplementoInstitucion'
        "403":
          description: body is empty
  /complemento_institucion/{id}:
    get:
      tags:
      - complemento_institucion
      description: get ComplementoInstitucion by id
      operationId: ComplementoInstitucionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ComplementoInstitucion'
        "403":
          description: :id is empty
    put:
      tags:
      - complemento_institucion
      description: update the ComplementoInstitucion
      operationId: ComplementoInstitucionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ComplementoInstitucion content
        required: true
        schema:
          $ref: '#/definitions/models.ComplementoInstitucion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ComplementoInstitucion'
        "403":
          description: :id is not int
    delete:
      tags:
      - complemento_institucion
      description: delete the ComplementoInstitucion
      operationId: ComplementoInstitucionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /componente/:
    get:
      tags:
      - componente
      description: get Componente
      operationId: ComponenteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Componente'
        "403":
          description: ""
    post:
      tags:
      - componente
      description: create Componente
      operationId: ComponenteController.Post
      parameters:
      - in: body
        name: body
        description: body for Componente content
        required: true
        schema:
          $ref: '#/definitions/models.Componente'
      responses:
        "201":
          description: '{int} models.Componente'
        "403":
          description: body is empty
  /componente/{id}:
    get:
      tags:
      - componente
      description: get Componente by id
      operationId: ComponenteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Componente'
        "403":
          description: :id is empty
    put:
      tags:
      - componente
      description: update the Componente
      operationId: ComponenteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Componente content
        required: true
        schema:
          $ref: '#/definitions/models.Componente'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Componente'
        "403":
          description: :id is not int
    delete:
      tags:
      - componente
      description: delete the Componente
      operationId: ComponenteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /componentes_menu/:
    get:
      tags:
      - componentes_menu
      description: get ComponentesMenu
      operationId: ComponentesMenuController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ComponentesMenu'
        "403":
          description: ""
    post:
      tags:
      - componentes_menu
      description: create ComponentesMenu
      operationId: ComponentesMenuController.Post
      parameters:
      - in: body
        name: body
        description: body for ComponentesMenu content
        required: true
        schema:
          $ref: '#/definitions/models.ComponentesMenu'
      responses:
        "201":
          description: '{int} models.ComponentesMenu'
        "403":
          description: body is empty
  /componentes_menu/{id}:
    get:
      tags:
      - componentes_menu
      description: get ComponentesMenu by id
      operationId: ComponentesMenuController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ComponentesMenu'
        "403":
          description: :id is empty
    put:
      tags:
      - componentes_menu
      description: update the ComponentesMenu
      operationId: ComponentesMenuController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ComponentesMenu content
        required: true
        schema:
          $ref: '#/definitions/models.ComponentesMenu'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ComponentesMenu'
        "403":
          description: :id is not int
    delete:
      tags:
      - componentes_menu
      description: delete the ComponentesMenu
      operationId: ComponentesMenuController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /componentes_menu_temp/:
    get:
      tags:
      - componentes_menu_temp
      description: get ComponentesMenuTemp
      operationId: ComponentesMenuTempController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ComponentesMenuTemp'
        "403":
          description: ""
    post:
      tags:
      - componentes_menu_temp
      description: create ComponentesMenuTemp
      operationId: ComponentesMenuTempController.Post
      parameters:
      - in: body
        name: body
        description: body for ComponentesMenuTemp content
        required: true
        schema:
          $ref: '#/definitions/models.ComponentesMenuTemp'
      responses:
        "201":
          description: '{int} models.ComponentesMenuTemp'
        "403":
          description: body is empty
  /componentes_menu_temp/{id}:
    get:
      tags:
      - componentes_menu_temp
      description: get ComponentesMenuTemp by id
      operationId: ComponentesMenuTempController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ComponentesMenuTemp'
        "403":
          description: :id is empty
    put:
      tags:
      - componentes_menu_temp
      description: update the ComponentesMenuTemp
      operationId: ComponentesMenuTempController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ComponentesMenuTemp content
        required: true
        schema:
          $ref: '#/definitions/models.ComponentesMenuTemp'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ComponentesMenuTemp'
        "403":
          description: :id is not int
    delete:
      tags:
      - componentes_menu_temp
      description: delete the ComponentesMenuTemp
      operationId: ComponentesMenuTempController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /departamento/:
    get:
      tags:
      - departamento
      description: get Departamento
      operationId: DepartamentoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Departamento'
        "403":
          description: ""
    post:
      tags:
      - departamento
      description: create Departamento
      operationId: DepartamentoController.Post
      parameters:
      - in: body
        name: body
        description: body for Departamento content
        required: true
        schema:
          $ref: '#/definitions/models.Departamento'
      responses:
        "201":
          description: '{int} models.Departamento'
        "403":
          description: body is empty
  /departamento/{id}:
    get:
      tags:
      - departamento
      description: get Departamento by id
      operationId: DepartamentoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Departamento'
        "403":
          description: :id is empty
    put:
      tags:
      - departamento
      description: update the Departamento
      operationId: DepartamentoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Departamento content
        required: true
        schema:
          $ref: '#/definitions/models.Departamento'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Departamento'
        "403":
          description: :id is not int
    delete:
      tags:
      - departamento
      description: delete the Departamento
      operationId: DepartamentoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /elemento/:
    get:
      tags:
      - elemento
      description: get Elemento
      operationId: ElementoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Elemento'
        "403":
          description: ""
    post:
      tags:
      - elemento
      description: create Elemento
      operationId: ElementoController.Post
      parameters:
      - in: body
        name: body
        description: body for Elemento content
        required: true
        schema:
          $ref: '#/definitions/models.Elemento'
      responses:
        "201":
          description: '{int} models.Elemento'
        "403":
          description: body is empty
  /elemento/{id}:
    get:
      tags:
      - elemento
      description: get Elemento by id
      operationId: ElementoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Elemento'
        "403":
          description: :id is empty
    put:
      tags:
      - elemento
      description: update the Elemento
      operationId: ElementoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Elemento content
        required: true
        schema:
          $ref: '#/definitions/models.Elemento'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Elemento'
        "403":
          description: :id is not int
    delete:
      tags:
      - elemento
      description: delete the Elemento
      operationId: ElementoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /elementos_institucion/:
    get:
      tags:
      - elementos_institucion
      description: get ElementosInstitucion
      operationId: ElementosInstitucionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ElementosInstitucion'
        "403":
          description: ""
    post:
      tags:
      - elementos_institucion
      description: create ElementosInstitucion
      operationId: ElementosInstitucionController.Post
      parameters:
      - in: body
        name: body
        description: body for ElementosInstitucion content
        required: true
        schema:
          $ref: '#/definitions/models.ElementosInstitucion'
      responses:
        "201":
          description: '{int} models.ElementosInstitucion'
        "403":
          description: body is empty
  /elementos_institucion/{id}:
    get:
      tags:
      - elementos_institucion
      description: get ElementosInstitucion by id
      operationId: ElementosInstitucionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ElementosInstitucion'
        "403":
          description: :id is empty
    put:
      tags:
      - elementos_institucion
      description: update the ElementosInstitucion
      operationId: ElementosInstitucionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ElementosInstitucion content
        required: true
        schema:
          $ref: '#/definitions/models.ElementosInstitucion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ElementosInstitucion'
        "403":
          description: :id is not int
    delete:
      tags:
      - elementos_institucion
      description: delete the ElementosInstitucion
      operationId: ElementosInstitucionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /elementos_proveedor/:
    get:
      tags:
      - elementos_proveedor
      description: get ElementosProveedor
      operationId: ElementosProveedorController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ElementosProveedor'
        "403":
          description: ""
    post:
      tags:
      - elementos_proveedor
      description: create ElementosProveedor
      operationId: ElementosProveedorController.Post
      parameters:
      - in: body
        name: body
        description: body for ElementosProveedor content
        required: true
        schema:
          $ref: '#/definitions/models.ElementosProveedor'
      responses:
        "201":
          description: '{int} models.ElementosProveedor'
        "403":
          description: body is empty
  /elementos_proveedor/{id}:
    get:
      tags:
      - elementos_proveedor
      description: get ElementosProveedor by id
      operationId: ElementosProveedorController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ElementosProveedor'
        "403":
          description: :id is empty
    put:
      tags:
      - elementos_proveedor
      description: update the ElementosProveedor
      operationId: ElementosProveedorController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ElementosProveedor content
        required: true
        schema:
          $ref: '#/definitions/models.ElementosProveedor'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ElementosProveedor'
        "403":
          description: :id is not int
    delete:
      tags:
      - elementos_proveedor
      description: delete the ElementosProveedor
      operationId: ElementosProveedorController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /estado/:
    get:
      tags:
      - estado
      description: get Estado
      operationId: EstadoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Estado'
        "403":
          description: ""
    post:
      tags:
      - estado
      description: create Estado
      operationId: EstadoController.Post
      parameters:
      - in: body
        name: body
        description: body for Estado content
        required: true
        schema:
          $ref: '#/definitions/models.Estado'
      responses:
        "201":
          description: '{int} models.Estado'
        "403":
          description: body is empty
  /estado/{id}:
    get:
      tags:
      - estado
      description: get Estado by id
      operationId: EstadoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Estado'
        "403":
          description: :id is empty
    put:
      tags:
      - estado
      description: update the Estado
      operationId: EstadoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Estado content
        required: true
        schema:
          $ref: '#/definitions/models.Estado'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Estado'
        "403":
          description: :id is not int
    delete:
      tags:
      - estado
      description: delete the Estado
      operationId: EstadoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /etc/:
    get:
      tags:
      - etc
      description: get Etc
      operationId: EtcController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Etc'
        "403":
          description: ""
    post:
      tags:
      - etc
      description: create Etc
      operationId: EtcController.Post
      parameters:
      - in: body
        name: body
        description: body for Etc content
        required: true
        schema:
          $ref: '#/definitions/models.Etc'
      responses:
        "201":
          description: '{int} models.Etc'
        "403":
          description: body is empty
  /etc/{id}:
    get:
      tags:
      - etc
      description: get Etc by id
      operationId: EtcController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Etc'
        "403":
          description: :id is empty
    put:
      tags:
      - etc
      description: update the Etc
      operationId: EtcController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Etc content
        required: true
        schema:
          $ref: '#/definitions/models.Etc'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Etc'
        "403":
          description: :id is not int
    delete:
      tags:
      - etc
      description: delete the Etc
      operationId: EtcController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /institucion/:
    get:
      tags:
      - institucion
      description: get Institucion
      operationId: InstitucionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Institucion'
        "403":
          description: ""
    post:
      tags:
      - institucion
      description: create Institucion
      operationId: InstitucionController.Post
      parameters:
      - in: body
        name: body
        description: body for Institucion content
        required: true
        schema:
          $ref: '#/definitions/models.Institucion'
      responses:
        "201":
          description: '{int} models.Institucion'
        "403":
          description: body is empty
  /institucion/{id}:
    get:
      tags:
      - institucion
      description: get Institucion by id
      operationId: InstitucionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Institucion'
        "403":
          description: :id is empty
    put:
      tags:
      - institucion
      description: update the Institucion
      operationId: InstitucionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Institucion content
        required: true
        schema:
          $ref: '#/definitions/models.Institucion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Institucion'
        "403":
          description: :id is not int
    delete:
      tags:
      - institucion
      description: delete the Institucion
      operationId: InstitucionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /jornada/:
    get:
      tags:
      - jornada
      description: get Jornada
      operationId: JornadaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Jornada'
        "403":
          description: ""
    post:
      tags:
      - jornada
      description: create Jornada
      operationId: JornadaController.Post
      parameters:
      - in: body
        name: body
        description: body for Jornada content
        required: true
        schema:
          $ref: '#/definitions/models.Jornada'
      responses:
        "201":
          description: '{int} models.Jornada'
        "403":
          description: body is empty
  /jornada/{id}:
    get:
      tags:
      - jornada
      description: get Jornada by id
      operationId: JornadaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Jornada'
        "403":
          description: :id is empty
    put:
      tags:
      - jornada
      description: update the Jornada
      operationId: JornadaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Jornada content
        required: true
        schema:
          $ref: '#/definitions/models.Jornada'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Jornada'
        "403":
          description: :id is not int
    delete:
      tags:
      - jornada
      description: delete the Jornada
      operationId: JornadaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /menu/:
    get:
      tags:
      - menu
      description: get Menu
      operationId: MenuController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Menu'
        "403":
          description: ""
    post:
      tags:
      - menu
      description: create Menu
      operationId: MenuController.Post
      parameters:
      - in: body
        name: body
        description: body for Menu content
        required: true
        schema:
          $ref: '#/definitions/models.Menu'
      responses:
        "201":
          description: '{int} models.Menu'
        "403":
          description: body is empty
  /menu/{id}:
    get:
      tags:
      - menu
      description: get Menu by id
      operationId: MenuController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Menu'
        "403":
          description: :id is empty
    put:
      tags:
      - menu
      description: update the Menu
      operationId: MenuController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Menu content
        required: true
        schema:
          $ref: '#/definitions/models.Menu'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Menu'
        "403":
          description: :id is not int
    delete:
      tags:
      - menu
      description: delete the Menu
      operationId: MenuController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /municipio/:
    get:
      tags:
      - municipio
      description: get Municipio
      operationId: MunicipioController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Municipio'
        "403":
          description: ""
    post:
      tags:
      - municipio
      description: create Municipio
      operationId: MunicipioController.Post
      parameters:
      - in: body
        name: body
        description: body for Municipio content
        required: true
        schema:
          $ref: '#/definitions/models.Municipio'
      responses:
        "201":
          description: '{int} models.Municipio'
        "403":
          description: body is empty
  /municipio/{id}:
    get:
      tags:
      - municipio
      description: get Municipio by id
      operationId: MunicipioController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Municipio'
        "403":
          description: :id is empty
    put:
      tags:
      - municipio
      description: update the Municipio
      operationId: MunicipioController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Municipio content
        required: true
        schema:
          $ref: '#/definitions/models.Municipio'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Municipio'
        "403":
          description: :id is not int
    delete:
      tags:
      - municipio
      description: delete the Municipio
      operationId: MunicipioController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /municipios_proveedor/:
    get:
      tags:
      - municipios_proveedor
      description: get MunicipiosProveedor
      operationId: MunicipiosProveedorController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MunicipiosProveedor'
        "403":
          description: ""
    post:
      tags:
      - municipios_proveedor
      description: create MunicipiosProveedor
      operationId: MunicipiosProveedorController.Post
      parameters:
      - in: body
        name: body
        description: body for MunicipiosProveedor content
        required: true
        schema:
          $ref: '#/definitions/models.MunicipiosProveedor'
      responses:
        "201":
          description: '{int} models.MunicipiosProveedor'
        "403":
          description: body is empty
  /municipios_proveedor/{id}:
    get:
      tags:
      - municipios_proveedor
      description: get MunicipiosProveedor by id
      operationId: MunicipiosProveedorController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MunicipiosProveedor'
        "403":
          description: :id is empty
    put:
      tags:
      - municipios_proveedor
      description: update the MunicipiosProveedor
      operationId: MunicipiosProveedorController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for MunicipiosProveedor content
        required: true
        schema:
          $ref: '#/definitions/models.MunicipiosProveedor'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MunicipiosProveedor'
        "403":
          description: :id is not int
    delete:
      tags:
      - municipios_proveedor
      description: delete the MunicipiosProveedor
      operationId: MunicipiosProveedorController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /periodo/:
    get:
      tags:
      - periodo
      description: get Periodo
      operationId: PeriodoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Periodo'
        "403":
          description: ""
    post:
      tags:
      - periodo
      description: create Periodo
      operationId: PeriodoController.Post
      parameters:
      - in: body
        name: body
        description: body for Periodo content
        required: true
        schema:
          $ref: '#/definitions/models.Periodo'
      responses:
        "201":
          description: '{int} models.Periodo'
        "403":
          description: body is empty
  /periodo/{id}:
    get:
      tags:
      - periodo
      description: get Periodo by id
      operationId: PeriodoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Periodo'
        "403":
          description: :id is empty
    put:
      tags:
      - periodo
      description: update the Periodo
      operationId: PeriodoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Periodo content
        required: true
        schema:
          $ref: '#/definitions/models.Periodo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Periodo'
        "403":
          description: :id is not int
    delete:
      tags:
      - periodo
      description: delete the Periodo
      operationId: PeriodoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /persona/:
    get:
      tags:
      - persona
      description: get Persona
      operationId: PersonaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Persona'
        "403":
          description: ""
    post:
      tags:
      - persona
      description: create Persona
      operationId: PersonaController.Post
      parameters:
      - in: body
        name: body
        description: body for Persona content
        required: true
        schema:
          $ref: '#/definitions/models.Persona'
      responses:
        "201":
          description: '{int} models.Persona'
        "403":
          description: body is empty
  /persona/{id}:
    get:
      tags:
      - persona
      description: get Persona by id
      operationId: PersonaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Persona'
        "403":
          description: :id is empty
    put:
      tags:
      - persona
      description: update the Persona
      operationId: PersonaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Persona content
        required: true
        schema:
          $ref: '#/definitions/models.Persona'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Persona'
        "403":
          description: :id is not int
    delete:
      tags:
      - persona
      description: delete the Persona
      operationId: PersonaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /plan/:
    get:
      tags:
      - plan
      description: get Plan
      operationId: PlanController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Plan'
        "403":
          description: ""
    post:
      tags:
      - plan
      description: create Plan
      operationId: PlanController.Post
      parameters:
      - in: body
        name: body
        description: body for Plan content
        required: true
        schema:
          $ref: '#/definitions/models.Plan'
      responses:
        "201":
          description: '{int} models.Plan'
        "403":
          description: body is empty
  /plan/{id}:
    get:
      tags:
      - plan
      description: get Plan by id
      operationId: PlanController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Plan'
        "403":
          description: :id is empty
    put:
      tags:
      - plan
      description: update the Plan
      operationId: PlanController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Plan content
        required: true
        schema:
          $ref: '#/definitions/models.Plan'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Plan'
        "403":
          description: :id is not int
    delete:
      tags:
      - plan
      description: delete the Plan
      operationId: PlanController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /preparacion/:
    get:
      tags:
      - preparacion
      description: get Preparacion
      operationId: PreparacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Preparacion'
        "403":
          description: ""
    post:
      tags:
      - preparacion
      description: create Preparacion
      operationId: PreparacionController.Post
      parameters:
      - in: body
        name: body
        description: body for Preparacion content
        required: true
        schema:
          $ref: '#/definitions/models.Preparacion'
      responses:
        "201":
          description: '{int} models.Preparacion'
        "403":
          description: body is empty
  /preparacion/{id}:
    get:
      tags:
      - preparacion
      description: get Preparacion by id
      operationId: PreparacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Preparacion'
        "403":
          description: :id is empty
    put:
      tags:
      - preparacion
      description: update the Preparacion
      operationId: PreparacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Preparacion content
        required: true
        schema:
          $ref: '#/definitions/models.Preparacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Preparacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - preparacion
      description: delete the Preparacion
      operationId: PreparacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /preparaciones_componente/:
    get:
      tags:
      - preparaciones_componente
      description: get PreparacionesComponente
      operationId: PreparacionesComponenteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PreparacionesComponente'
        "403":
          description: ""
    post:
      tags:
      - preparaciones_componente
      description: create PreparacionesComponente
      operationId: PreparacionesComponenteController.Post
      parameters:
      - in: body
        name: body
        description: body for PreparacionesComponente content
        required: true
        schema:
          $ref: '#/definitions/models.PreparacionesComponente'
      responses:
        "201":
          description: '{int} models.PreparacionesComponente'
        "403":
          description: body is empty
  /preparaciones_componente/{id}:
    get:
      tags:
      - preparaciones_componente
      description: get PreparacionesComponente by id
      operationId: PreparacionesComponenteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PreparacionesComponente'
        "403":
          description: :id is empty
    put:
      tags:
      - preparaciones_componente
      description: update the PreparacionesComponente
      operationId: PreparacionesComponenteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for PreparacionesComponente content
        required: true
        schema:
          $ref: '#/definitions/models.PreparacionesComponente'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PreparacionesComponente'
        "403":
          description: :id is not int
    delete:
      tags:
      - preparaciones_componente
      description: delete the PreparacionesComponente
      operationId: PreparacionesComponenteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /producto/:
    get:
      tags:
      - producto
      description: get Producto
      operationId: ProductoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Producto'
        "403":
          description: ""
    post:
      tags:
      - producto
      description: create Producto
      operationId: ProductoController.Post
      parameters:
      - in: body
        name: body
        description: body for Producto content
        required: true
        schema:
          $ref: '#/definitions/models.Producto'
      responses:
        "201":
          description: '{int} models.Producto'
        "403":
          description: body is empty
  /producto/{id}:
    get:
      tags:
      - producto
      description: get Producto by id
      operationId: ProductoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Producto'
        "403":
          description: :id is empty
    put:
      tags:
      - producto
      description: update the Producto
      operationId: ProductoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Producto content
        required: true
        schema:
          $ref: '#/definitions/models.Producto'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Producto'
        "403":
          description: :id is not int
    delete:
      tags:
      - producto
      description: delete the Producto
      operationId: ProductoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /productos_preparacion/:
    get:
      tags:
      - productos_preparacion
      description: get ProductosPreparacion
      operationId: ProductosPreparacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ProductosPreparacion'
        "403":
          description: ""
    post:
      tags:
      - productos_preparacion
      description: create ProductosPreparacion
      operationId: ProductosPreparacionController.Post
      parameters:
      - in: body
        name: body
        description: body for ProductosPreparacion content
        required: true
        schema:
          $ref: '#/definitions/models.ProductosPreparacion'
      responses:
        "201":
          description: '{int} models.ProductosPreparacion'
        "403":
          description: body is empty
  /productos_preparacion/{id}:
    get:
      tags:
      - productos_preparacion
      description: get ProductosPreparacion by id
      operationId: ProductosPreparacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ProductosPreparacion'
        "403":
          description: :id is empty
    put:
      tags:
      - productos_preparacion
      description: update the ProductosPreparacion
      operationId: ProductosPreparacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ProductosPreparacion content
        required: true
        schema:
          $ref: '#/definitions/models.ProductosPreparacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ProductosPreparacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - productos_preparacion
      description: delete the ProductosPreparacion
      operationId: ProductosPreparacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /productos_proveedor/:
    get:
      tags:
      - productos_proveedor
      description: get ProductosProveedor
      operationId: ProductosProveedorController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ProductosProveedor'
        "403":
          description: ""
    post:
      tags:
      - productos_proveedor
      description: create ProductosProveedor
      operationId: ProductosProveedorController.Post
      parameters:
      - in: body
        name: body
        description: body for ProductosProveedor content
        required: true
        schema:
          $ref: '#/definitions/models.ProductosProveedor'
      responses:
        "201":
          description: '{int} models.ProductosProveedor'
        "403":
          description: body is empty
  /productos_proveedor/{id}:
    get:
      tags:
      - productos_proveedor
      description: get ProductosProveedor by id
      operationId: ProductosProveedorController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ProductosProveedor'
        "403":
          description: :id is empty
    put:
      tags:
      - productos_proveedor
      description: update the ProductosProveedor
      operationId: ProductosProveedorController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ProductosProveedor content
        required: true
        schema:
          $ref: '#/definitions/models.ProductosProveedor'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ProductosProveedor'
        "403":
          description: :id is not int
    delete:
      tags:
      - productos_proveedor
      description: delete the ProductosProveedor
      operationId: ProductosProveedorController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /proveedor/:
    get:
      tags:
      - proveedor
      description: get Proveedor
      operationId: ProveedorController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Proveedor'
        "403":
          description: ""
    post:
      tags:
      - proveedor
      description: create Proveedor
      operationId: ProveedorController.Post
      parameters:
      - in: body
        name: body
        description: body for Proveedor content
        required: true
        schema:
          $ref: '#/definitions/models.Proveedor'
      responses:
        "201":
          description: '{int} models.Proveedor'
        "403":
          description: body is empty
  /proveedor/{id}:
    get:
      tags:
      - proveedor
      description: get Proveedor by id
      operationId: ProveedorController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Proveedor'
        "403":
          description: :id is empty
    put:
      tags:
      - proveedor
      description: update the Proveedor
      operationId: ProveedorController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Proveedor content
        required: true
        schema:
          $ref: '#/definitions/models.Proveedor'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Proveedor'
        "403":
          description: :id is not int
    delete:
      tags:
      - proveedor
      description: delete the Proveedor
      operationId: ProveedorController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /rango_edad/:
    get:
      tags:
      - rango_edad
      description: get RangoEdad
      operationId: RangoEdadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RangoEdad'
        "403":
          description: ""
    post:
      tags:
      - rango_edad
      description: create RangoEdad
      operationId: RangoEdadController.Post
      parameters:
      - in: body
        name: body
        description: body for RangoEdad content
        required: true
        schema:
          $ref: '#/definitions/models.RangoEdad'
      responses:
        "201":
          description: '{int} models.RangoEdad'
        "403":
          description: body is empty
  /rango_edad/{id}:
    get:
      tags:
      - rango_edad
      description: get RangoEdad by id
      operationId: RangoEdadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RangoEdad'
        "403":
          description: :id is empty
    put:
      tags:
      - rango_edad
      description: update the RangoEdad
      operationId: RangoEdadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RangoEdad content
        required: true
        schema:
          $ref: '#/definitions/models.RangoEdad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RangoEdad'
        "403":
          description: :id is not int
    delete:
      tags:
      - rango_edad
      description: delete the RangoEdad
      operationId: RangoEdadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /rangos_preparacion/:
    get:
      tags:
      - rangos_preparacion
      description: get RangosPreparacion
      operationId: RangosPreparacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RangosPreparacion'
        "403":
          description: ""
    post:
      tags:
      - rangos_preparacion
      description: create RangosPreparacion
      operationId: RangosPreparacionController.Post
      parameters:
      - in: body
        name: body
        description: body for RangosPreparacion content
        required: true
        schema:
          $ref: '#/definitions/models.RangosPreparacion'
      responses:
        "201":
          description: '{int} models.RangosPreparacion'
        "403":
          description: body is empty
  /rangos_preparacion/{id}:
    get:
      tags:
      - rangos_preparacion
      description: get RangosPreparacion by id
      operationId: RangosPreparacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RangosPreparacion'
        "403":
          description: :id is empty
    put:
      tags:
      - rangos_preparacion
      description: update the RangosPreparacion
      operationId: RangosPreparacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RangosPreparacion content
        required: true
        schema:
          $ref: '#/definitions/models.RangosPreparacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RangosPreparacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - rangos_preparacion
      description: delete the RangosPreparacion
      operationId: RangosPreparacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /rol/:
    get:
      tags:
      - rol
      description: get Rol
      operationId: RolController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Rol'
        "403":
          description: ""
    post:
      tags:
      - rol
      description: create Rol
      operationId: RolController.Post
      parameters:
      - in: body
        name: body
        description: body for Rol content
        required: true
        schema:
          $ref: '#/definitions/models.Rol'
      responses:
        "201":
          description: '{int} models.Rol'
        "403":
          description: body is empty
  /rol/{id}:
    get:
      tags:
      - rol
      description: get Rol by id
      operationId: RolController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Rol'
        "403":
          description: :id is empty
    put:
      tags:
      - rol
      description: update the Rol
      operationId: RolController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Rol content
        required: true
        schema:
          $ref: '#/definitions/models.Rol'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Rol'
        "403":
          description: :id is not int
    delete:
      tags:
      - rol
      description: delete the Rol
      operationId: RolController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /rol_persona_institucion/:
    get:
      tags:
      - rol_persona_institucion
      description: get RolPersonaInstitucion
      operationId: RolPersonaInstitucionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RolPersonaInstitucion'
        "403":
          description: ""
    post:
      tags:
      - rol_persona_institucion
      description: create RolPersonaInstitucion
      operationId: RolPersonaInstitucionController.Post
      parameters:
      - in: body
        name: body
        description: body for RolPersonaInstitucion content
        required: true
        schema:
          $ref: '#/definitions/models.RolPersonaInstitucion'
      responses:
        "201":
          description: '{int} models.RolPersonaInstitucion'
        "403":
          description: body is empty
  /rol_persona_institucion/{id}:
    get:
      tags:
      - rol_persona_institucion
      description: get RolPersonaInstitucion by id
      operationId: RolPersonaInstitucionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RolPersonaInstitucion'
        "403":
          description: :id is empty
    put:
      tags:
      - rol_persona_institucion
      description: update the RolPersonaInstitucion
      operationId: RolPersonaInstitucionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RolPersonaInstitucion content
        required: true
        schema:
          $ref: '#/definitions/models.RolPersonaInstitucion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RolPersonaInstitucion'
        "403":
          description: :id is not int
    delete:
      tags:
      - rol_persona_institucion
      description: delete the RolPersonaInstitucion
      operationId: RolPersonaInstitucionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_alimento/:
    get:
      tags:
      - tipo_alimento
      description: get TipoAlimento
      operationId: TipoAlimentoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoAlimento'
        "403":
          description: ""
    post:
      tags:
      - tipo_alimento
      description: create TipoAlimento
      operationId: TipoAlimentoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoAlimento content
        required: true
        schema:
          $ref: '#/definitions/models.TipoAlimento'
      responses:
        "201":
          description: '{int} models.TipoAlimento'
        "403":
          description: body is empty
  /tipo_alimento/{id}:
    get:
      tags:
      - tipo_alimento
      description: get TipoAlimento by id
      operationId: TipoAlimentoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoAlimento'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_alimento
      description: update the TipoAlimento
      operationId: TipoAlimentoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoAlimento content
        required: true
        schema:
          $ref: '#/definitions/models.TipoAlimento'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoAlimento'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_alimento
      description: delete the TipoAlimento
      operationId: TipoAlimentoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_institucion/:
    get:
      tags:
      - tipo_institucion
      description: get TipoInstitucion
      operationId: TipoInstitucionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoInstitucion'
        "403":
          description: ""
    post:
      tags:
      - tipo_institucion
      description: create TipoInstitucion
      operationId: TipoInstitucionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoInstitucion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoInstitucion'
      responses:
        "201":
          description: '{int} models.TipoInstitucion'
        "403":
          description: body is empty
  /tipo_institucion/{id}:
    get:
      tags:
      - tipo_institucion
      description: get TipoInstitucion by id
      operationId: TipoInstitucionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoInstitucion'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_institucion
      description: update the TipoInstitucion
      operationId: TipoInstitucionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoInstitucion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoInstitucion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoInstitucion'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_institucion
      description: delete the TipoInstitucion
      operationId: TipoInstitucionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_minuta/:
    get:
      tags:
      - tipo_minuta
      description: get TipoMinuta
      operationId: TipoMinutaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoMinuta'
        "403":
          description: ""
    post:
      tags:
      - tipo_minuta
      description: create TipoMinuta
      operationId: TipoMinutaController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoMinuta content
        required: true
        schema:
          $ref: '#/definitions/models.TipoMinuta'
      responses:
        "201":
          description: '{int} models.TipoMinuta'
        "403":
          description: body is empty
  /tipo_minuta/{id}:
    get:
      tags:
      - tipo_minuta
      description: get TipoMinuta by id
      operationId: TipoMinutaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoMinuta'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_minuta
      description: update the TipoMinuta
      operationId: TipoMinutaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoMinuta content
        required: true
        schema:
          $ref: '#/definitions/models.TipoMinuta'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoMinuta'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_minuta
      description: delete the TipoMinuta
      operationId: TipoMinutaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /tipo_modalidad/:
    get:
      tags:
      - tipo_modalidad
      description: get TipoModalidad
      operationId: TipoModalidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoModalidad'
        "403":
          description: ""
    post:
      tags:
      - tipo_modalidad
      description: create TipoModalidad
      operationId: TipoModalidadController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoModalidad content
        required: true
        schema:
          $ref: '#/definitions/models.TipoModalidad'
      responses:
        "201":
          description: '{int} models.TipoModalidad'
        "403":
          description: body is empty
  /tipo_modalidad/{id}:
    get:
      tags:
      - tipo_modalidad
      description: get TipoModalidad by id
      operationId: TipoModalidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoModalidad'
        "403":
          description: :id is empty
    put:
      tags:
      - tipo_modalidad
      description: update the TipoModalidad
      operationId: TipoModalidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoModalidad content
        required: true
        schema:
          $ref: '#/definitions/models.TipoModalidad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoModalidad'
        "403":
          description: :id is not int
    delete:
      tags:
      - tipo_modalidad
      description: delete the TipoModalidad
      operationId: TipoModalidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /total_planeacion/:
    get:
      tags:
      - total_planeacion
      description: get TotalPlaneacion
      operationId: TotalPlaneacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TotalPlaneacion'
        "403":
          description: ""
    post:
      tags:
      - total_planeacion
      description: create TotalPlaneacion
      operationId: TotalPlaneacionController.Post
      parameters:
      - in: body
        name: body
        description: body for TotalPlaneacion content
        required: true
        schema:
          $ref: '#/definitions/models.TotalPlaneacion'
      responses:
        "201":
          description: '{int} models.TotalPlaneacion'
        "403":
          description: body is empty
  /total_planeacion/{id}:
    get:
      tags:
      - total_planeacion
      description: get TotalPlaneacion by id
      operationId: TotalPlaneacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TotalPlaneacion'
        "403":
          description: :id is empty
    put:
      tags:
      - total_planeacion
      description: update the TotalPlaneacion
      operationId: TotalPlaneacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TotalPlaneacion content
        required: true
        schema:
          $ref: '#/definitions/models.TotalPlaneacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TotalPlaneacion'
        "403":
          description: :id is not int
    delete:
      tags:
      - total_planeacion
      description: delete the TotalPlaneacion
      operationId: TotalPlaneacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /unidad_medida/:
    get:
      tags:
      - unidad_medida
      description: get UnidadMedida
      operationId: UnidadMedidaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UnidadMedida'
        "403":
          description: ""
    post:
      tags:
      - unidad_medida
      description: create UnidadMedida
      operationId: UnidadMedidaController.Post
      parameters:
      - in: body
        name: body
        description: body for UnidadMedida content
        required: true
        schema:
          $ref: '#/definitions/models.UnidadMedida'
      responses:
        "201":
          description: '{int} models.UnidadMedida'
        "403":
          description: body is empty
  /unidad_medida/{id}:
    get:
      tags:
      - unidad_medida
      description: get UnidadMedida by id
      operationId: UnidadMedidaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UnidadMedida'
        "403":
          description: :id is empty
    put:
      tags:
      - unidad_medida
      description: update the UnidadMedida
      operationId: UnidadMedidaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for UnidadMedida content
        required: true
        schema:
          $ref: '#/definitions/models.UnidadMedida'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UnidadMedida'
        "403":
          description: :id is not int
    delete:
      tags:
      - unidad_medida
      description: delete the UnidadMedida
      operationId: UnidadMedidaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /waybill/:
    get:
      tags:
      - waybill
      description: get Waybill
      operationId: WaybillController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Waybill'
        "403":
          description: ""
    post:
      tags:
      - waybill
      description: create Waybill
      operationId: WaybillController.Post
      parameters:
      - in: body
        name: body
        description: body for Waybill content
        required: true
        schema:
          $ref: '#/definitions/models.Waybill'
      responses:
        "201":
          description: '{int} models.Waybill'
        "403":
          description: body is empty
  /waybill/{id}:
    get:
      tags:
      - waybill
      description: get Waybill by id
      operationId: WaybillController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Waybill'
        "403":
          description: :id is empty
    put:
      tags:
      - waybill
      description: update the Waybill
      operationId: WaybillController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Waybill content
        required: true
        schema:
          $ref: '#/definitions/models.Waybill'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Waybill'
        "403":
          description: :id is not int
    delete:
      tags:
      - waybill
      description: delete the Waybill
      operationId: WaybillController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /waybill_temporal/:
    get:
      tags:
      - waybill_temporal
      description: get WaybillTemporal
      operationId: WaybillTemporalController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.WaybillTemporal'
        "403":
          description: ""
    post:
      tags:
      - waybill_temporal
      description: create WaybillTemporal
      operationId: WaybillTemporalController.Post
      parameters:
      - in: body
        name: body
        description: body for WaybillTemporal content
        required: true
        schema:
          $ref: '#/definitions/models.WaybillTemporal'
      responses:
        "201":
          description: '{int} models.WaybillTemporal'
        "403":
          description: body is empty
  /waybill_temporal/{id}:
    get:
      tags:
      - waybill_temporal
      description: get WaybillTemporal by id
      operationId: WaybillTemporalController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.WaybillTemporal'
        "403":
          description: :id is empty
    put:
      tags:
      - waybill_temporal
      description: update the WaybillTemporal
      operationId: WaybillTemporalController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for WaybillTemporal content
        required: true
        schema:
          $ref: '#/definitions/models.WaybillTemporal'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.WaybillTemporal'
        "403":
          description: :id is not int
    delete:
      tags:
      - waybill_temporal
      description: delete the WaybillTemporal
      operationId: WaybillTemporalController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /waybill_temporal_cuatro/:
    get:
      tags:
      - waybill_temporal_cuatro
      description: get WaybillTemporalCuatro
      operationId: WaybillTemporalCuatroController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.WaybillTemporalCuatro'
        "403":
          description: ""
    post:
      tags:
      - waybill_temporal_cuatro
      description: create WaybillTemporalCuatro
      operationId: WaybillTemporalCuatroController.Post
      parameters:
      - in: body
        name: body
        description: body for WaybillTemporalCuatro content
        required: true
        schema:
          $ref: '#/definitions/models.WaybillTemporalCuatro'
      responses:
        "201":
          description: '{int} models.WaybillTemporalCuatro'
        "403":
          description: body is empty
  /waybill_temporal_cuatro/{id}:
    get:
      tags:
      - waybill_temporal_cuatro
      description: get WaybillTemporalCuatro by id
      operationId: WaybillTemporalCuatroController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.WaybillTemporalCuatro'
        "403":
          description: :id is empty
    put:
      tags:
      - waybill_temporal_cuatro
      description: update the WaybillTemporalCuatro
      operationId: WaybillTemporalCuatroController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for WaybillTemporalCuatro content
        required: true
        schema:
          $ref: '#/definitions/models.WaybillTemporalCuatro'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.WaybillTemporalCuatro'
        "403":
          description: :id is not int
    delete:
      tags:
      - waybill_temporal_cuatro
      description: delete the WaybillTemporalCuatro
      operationId: WaybillTemporalCuatroController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /waybill_temporal_dos/:
    get:
      tags:
      - waybill_temporal_dos
      description: get WaybillTemporalDos
      operationId: WaybillTemporalDosController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.WaybillTemporalDos'
        "403":
          description: ""
    post:
      tags:
      - waybill_temporal_dos
      description: create WaybillTemporalDos
      operationId: WaybillTemporalDosController.Post
      parameters:
      - in: body
        name: body
        description: body for WaybillTemporalDos content
        required: true
        schema:
          $ref: '#/definitions/models.WaybillTemporalDos'
      responses:
        "201":
          description: '{int} models.WaybillTemporalDos'
        "403":
          description: body is empty
  /waybill_temporal_dos/{id}:
    get:
      tags:
      - waybill_temporal_dos
      description: get WaybillTemporalDos by id
      operationId: WaybillTemporalDosController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.WaybillTemporalDos'
        "403":
          description: :id is empty
    put:
      tags:
      - waybill_temporal_dos
      description: update the WaybillTemporalDos
      operationId: WaybillTemporalDosController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for WaybillTemporalDos content
        required: true
        schema:
          $ref: '#/definitions/models.WaybillTemporalDos'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.WaybillTemporalDos'
        "403":
          description: :id is not int
    delete:
      tags:
      - waybill_temporal_dos
      description: delete the WaybillTemporalDos
      operationId: WaybillTemporalDosController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  models.Complemento:
    title: Complemento
    type: object
    properties:
      EstadoId:
        type: integer
        format: int64
      FechaActualizacion:
        type: string
        format: string
      FechaCreacion:
        type: string
        format: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.ComplementoInstitucion:
    title: ComplementoInstitucion
    type: object
    properties:
      Cantidad:
        type: integer
        format: int64
      ComplementoId:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      InstitucionId:
        type: integer
        format: int64
      RangoEdadId:
        type: integer
        format: int64
  models.Componente:
    title: Componente
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.ComponentesMenu:
    title: ComponentesMenu
    type: object
    properties:
      ComponenteId:
        $ref: '#/definitions/models.Componente'
      Estado:
        type: string
      Id:
        type: integer
        format: int64
      MenuId:
        $ref: '#/definitions/models.Menu'
      PreparacionId:
        type: integer
        format: int64
      TipoComplementoId:
        type: integer
        format: int64
      TipoMinutaId:
        type: integer
        format: int64
  models.ComponentesMenuTemp:
    title: ComponentesMenuTemp
    type: object
    properties:
      ComponenteId:
        $ref: '#/definitions/models.Componente'
      Id:
        type: integer
        format: int64
      MenuId:
        $ref: '#/definitions/models.Menu'
  models.Departamento:
    title: Departamento
    type: object
    properties:
      CodigoDivipola:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.Elemento:
    title: Elemento
    type: object
    properties:
      Codigo:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      TipoAlimentoId:
        $ref: '#/definitions/models.TipoAlimento'
  models.ElementosInstitucion:
    title: ElementosInstitucion
    type: object
    properties:
      Cantidad:
        type: integer
        format: int64
      ElementoId:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      InstitucionId:
        type: integer
        format: int64
  models.ElementosProveedor:
    title: ElementosProveedor
    type: object
    properties:
      ElementoId:
        $ref: '#/definitions/models.Elemento'
      Estado:
        type: string
      FechaAplicacion:
        type: string
        format: string
      Id:
        type: integer
        format: int64
      ProveedorId:
        $ref: '#/definitions/models.Proveedor'
      UnidadMedidaId:
        $ref: '#/definitions/models.UnidadMedida'
      Valor:
        type: integer
        format: int64
  models.Estado:
    title: Estado
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.Etc:
    title: Etc
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.Institucion:
    title: Institucion
    type: object
    properties:
      AlRangoCuatro:
        type: integer
        format: int64
      AlRangoDieciocho:
        type: integer
        format: int64
      AlRangoSiete:
        type: integer
        format: int64
      AlRangoTrece:
        type: integer
        format: int64
      CantidadManipuladoras:
        type: integer
        format: int64
      CmRangoCuatro:
        type: integer
        format: int64
      CmRangoDieciocho:
        type: integer
        format: int64
      CmRangoSiete:
        type: integer
        format: int64
      CmRangoTrece:
        type: integer
        format: int64
      CodigoDane:
        type: string
      CodigoDanePrincipal:
        type: string
      CtRangoCuatro:
        type: integer
        format: int64
      CtRangoDieciocho:
        type: integer
        format: int64
      CtRangoSiete:
        type: integer
        format: int64
      CtRangoTrece:
        type: integer
        format: int64
      Descripcion:
        type: string
      EsPrincipal:
        type: integer
        format: int32
      Estado:
        type: string
      EtcId:
        type: integer
        format: int64
      FechaActualizacion:
        type: string
        format: string
      FechaRegistro:
        type: string
        format: string
      Id:
        type: integer
        format: int64
      Indicaciones:
        type: string
      Latitud:
        type: number
        format: double
      Longitud:
        type: number
        format: double
      MunicipioId:
        type: integer
        format: int64
      Nombre:
        type: string
      TipoInstitucionId:
        type: integer
        format: int64
      TipoMinuta:
        type: integer
        format: int64
      TipoModalidad:
        type: integer
        format: int64
  models.Jornada:
    title: Jornada
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.Menu:
    title: Menu
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.Municipio:
    title: Municipio
    type: object
    properties:
      CodigoDivipola:
        type: string
      DepartamentoId:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Zona:
        type: string
  models.MunicipiosProveedor:
    title: MunicipiosProveedor
    type: object
    properties:
      Id:
        type: integer
        format: int64
      MunicipioId:
        $ref: '#/definitions/models.Municipio'
      ProveedorId:
        $ref: '#/definitions/models.Proveedor'
  models.Periodo:
    title: Periodo
    type: object
    properties:
      Ano:
        type: integer
        format: int64
      Estado:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Semana:
        type: integer
        format: int64
  models.Persona:
    title: Persona
    type: object
    properties:
      CodigoEtnia:
        type: integer
        format: int64
      CodigoGrado:
        type: integer
        format: int64
      Direccion:
        type: string
      Documento:
        type: string
      Edad:
        type: integer
        format: int64
      Email:
        type: string
      Estado:
        type: string
      Estrato:
        type: integer
        format: int64
      Etnia:
        type: string
      FechaNacimiento:
        type: string
        format: string
      Genero:
        type: string
      Grado:
        type: string
      Id:
        type: integer
        format: int64
      NombreCompleto:
        type: string
      Observaciones:
        type: string
      PoblacionVictimaConflicto:
        type: integer
        format: int64
      PrimerApellido:
        type: string
      PrimerNombre:
        type: string
      SegundoApellido:
        type: string
      SegundoNombre:
        type: string
      Telefono:
        type: string
      TipoDocumento:
        type: string
  models.Plan:
    title: Plan
    type: object
    properties:
      Abreviacion:
        type: string
      Anio:
        type: integer
        format: int64
      CodigoDane:
        type: string
      Departamento:
        type: string
      DepartamentoCodigoDivipola:
        type: string
      DepartamentoId:
        type: integer
        format: int64
      DiasAtencion:
        type: integer
        format: int64
      Direccion:
        type: string
      Estado:
        type: string
      FechaEntrega:
        type: string
      FechasGeneradas:
        type: string
      Id:
        type: integer
        format: int64
      Institucion:
        type: string
      InstitucionId:
        type: integer
        format: int64
      MenuFinal:
        type: integer
        format: int64
      MenuInicial:
        type: integer
        format: int64
      Municipio:
        type: string
      MunicipioCodigoDivipola:
        type: string
      MunicipioId:
        type: integer
        format: int64
      RangoMenu:
        type: string
      Semana:
        type: integer
        format: int64
      TipoMinuta:
        type: string
      TipoMinutaId:
        type: integer
        format: int64
      Uid:
        type: string
  models.Preparacion:
    title: Preparacion
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.PreparacionesComponente:
    title: PreparacionesComponente
    type: object
    properties:
      ComponentesMenuId:
        $ref: '#/definitions/models.ComponentesMenuTemp'
      Id:
        type: integer
        format: int64
      PreparacionId:
        $ref: '#/definitions/models.Preparacion'
  models.Producto:
    title: Producto
    type: object
    properties:
      Codigo:
        type: integer
        format: int64
      CodigoNutricional:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      TipoAlimentoId:
        $ref: '#/definitions/models.TipoAlimento'
  models.ProductosPreparacion:
    title: ProductosPreparacion
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Peso:
        type: integer
        format: int64
      PreparacionId:
        $ref: '#/definitions/models.Preparacion'
      ProductoId:
        $ref: '#/definitions/models.Producto'
  models.ProductosProveedor:
    title: ProductosProveedor
    type: object
    properties:
      Id:
        type: integer
        format: int64
      ProductoId:
        $ref: '#/definitions/models.Producto'
      ProveedorId:
        $ref: '#/definitions/models.Proveedor'
      UnidadMedidaId:
        $ref: '#/definitions/models.UnidadMedida'
      Valor:
        type: integer
        format: int64
  models.Proveedor:
    title: Proveedor
    type: object
    properties:
      Estado:
        type: integer
        format: int64
      FechaActualizacion:
        type: string
        format: string
      FechaRegistro:
        type: string
        format: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.RangoEdad:
    title: RangoEdad
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Rango:
        type: string
  models.RangosPreparacion:
    title: RangosPreparacion
    type: object
    properties:
      Id:
        type: integer
        format: int64
      MenuId:
        type: integer
        format: int64
      PesoBruto:
        type: number
        format: double
      PreparacionId:
        type: integer
        format: int64
      ProductoId:
        type: integer
        format: int64
      RangoId:
        type: integer
        format: int64
      TipoMinutaId:
        type: integer
        format: int64
  models.Rol:
    title: Rol
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.RolPersonaInstitucion:
    title: RolPersonaInstitucion
    type: object
    properties:
      Id:
        type: integer
        format: int64
      InstitucionId:
        type: integer
        format: int64
      PersonaId:
        type: integer
        format: int64
      RolId:
        type: integer
        format: int64
  models.TipoAlimento:
    title: TipoAlimento
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.TipoInstitucion:
    title: TipoInstitucion
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.TipoMinuta:
    title: TipoMinuta
    type: object
    properties:
      Abreviacion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.TipoModalidad:
    title: TipoModalidad
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.TotalPlaneacion:
    title: TotalPlaneacion
    type: object
    properties:
      Anio:
        type: integer
        format: int64
      Cantidad:
        type: integer
        format: int64
      CodigoDane:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Institucion:
        type: string
      InstitucionId:
        type: integer
        format: int64
      Peso:
        type: number
        format: double
      Producto:
        type: string
      ProductoId:
        type: integer
        format: int64
      RangoMenu:
        type: string
      Semana:
        type: integer
        format: int64
      Total:
        type: number
        format: double
      Uid:
        type: string
  models.UnidadMedida:
    title: UnidadMedida
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Peso:
        type: integer
        format: int64
  models.Waybill:
    title: Waybill
    type: object
    properties:
      Alimento:
        type: string
      Almuerzo:
        type: integer
        format: int64
      Anio:
        type: integer
        format: int64
      CodigoDane:
        type: string
      CoordinadorZona:
        type: string
      CuposManana:
        type: integer
        format: int64
      CuposTarde:
        type: integer
        format: int64
      Direccion:
        type: string
      EmailCoordinador:
        type: string
      EntregaReal:
        type: integer
        format: int64
      Etc:
        type: string
      Excedente:
        type: number
        format: double
      Fecha:
        type: string
        format: string
      Id:
        type: integer
        format: int64
      Institucion:
        type: string
      InstitucionId:
        type: integer
        format: int64
      InstitucionSecuencia:
        type: integer
        format: int64
      Menu:
        type: string
      MonitorZona:
        type: string
      NombreRector:
        type: string
      Observacion:
        type: string
      Origen:
        type: string
      Peso:
        type: number
        format: double
      PesoPresentacion:
        type: integer
        format: int64
      Presentacion:
        type: string
      ProductoId:
        type: integer
        format: int64
      Responsable:
        type: string
      ResponsableTelefono:
        type: string
      Saldo:
        type: number
        format: double
      Semana:
        type: integer
        format: int64
      TelefonoCoordinador:
        type: string
      TelefonoSede:
        type: string
      TipoAlimento:
        type: string
      Uid:
        type: string
      Unidades:
        type: integer
        format: int64
      Zona:
        type: string
  models.WaybillTemporal:
    title: WaybillTemporal
    type: object
    properties:
      Anio:
        type: integer
        format: int64
      CodigoDane:
        type: integer
        format: int64
      Estado:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Indicaciones:
        type: string
      Institucion:
        type: string
      InstitucionId:
        type: integer
        format: int64
      Origen:
        type: string
      OrigenId:
        type: integer
        format: int64
      Peso:
        type: integer
        format: int64
      Presentacion:
        type: string
      Producto:
        type: string
      ProductoId:
        type: integer
        format: int64
      RangoMenu:
        type: string
      Resta:
        type: integer
        format: int64
      Semana:
        type: integer
        format: int64
      Sobrante:
        type: integer
        format: int64
      TipoProducto:
        type: string
      Total:
        type: number
        format: double
      Uid:
        type: string
      Unidad:
        type: integer
        format: int64
      UnidadId:
        type: integer
        format: int64
  models.WaybillTemporalCuatro:
    title: WaybillTemporalCuatro
    type: object
    properties:
      Anio:
        type: integer
        format: int64
      Cantidad:
        type: integer
        format: int64
      CodigoDane:
        type: integer
        format: int64
      Complemento:
        type: string
      ComplementoId:
        type: integer
        format: int64
      Estado:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Indicaciones:
        type: string
      Institucion:
        type: string
      InstitucionId:
        type: integer
        format: int64
      Origen:
        type: string
      OrigenId:
        type: integer
        format: int64
      Peso:
        type: integer
        format: int64
      Presentacion:
        type: string
      Producto:
        type: string
      ProductoId:
        type: integer
        format: int64
      RangoMenu:
        type: string
      Resta:
        type: integer
        format: int64
      Semana:
        type: integer
        format: int64
      Sobrante:
        type: integer
        format: int64
      TipoProducto:
        type: string
      Total:
        type: integer
        format: int64
      Uid:
        type: string
      Unidad:
        type: integer
        format: int64
      UnidadId:
        type: integer
        format: int64
  models.WaybillTemporalDos:
    title: WaybillTemporalDos
    type: object
    properties:
      Anio:
        type: integer
        format: int64
      CodigoDane:
        type: integer
        format: int64
      Estado:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Indicaciones:
        type: string
      Institucion:
        type: string
      InstitucionId:
        type: integer
        format: int64
      Origen:
        type: string
      OrigenId:
        type: integer
        format: int64
      Peso:
        type: number
        format: double
      Presentacion:
        type: string
      Producto:
        type: string
      ProductoId:
        type: integer
        format: int64
      RangoMenu:
        type: string
      Resta:
        type: integer
        format: int64
      Semana:
        type: integer
        format: int64
      Sobrante:
        type: integer
        format: int64
      TipoProducto:
        type: string
      Total:
        type: number
        format: double
      Uid:
        type: string
      Unidad:
        type: integer
        format: int64
      UnidadId:
        type: integer
        format: int64
tags:
- name: complemento
  description: |
    ComplementoController operations for Complemento
- name: complemento_institucion
  description: |
    ComplementoInstitucionController operations for ComplementoInstitucion
- name: componente
  description: |
    ComponenteController operations for Componente
- name: componentes_menu
  description: |
    ComponentesMenuController operations for ComponentesMenu
- name: componentes_menu_temp
  description: |
    ComponentesMenuTempController operations for ComponentesMenuTemp
- name: departamento
  description: |
    DepartamentoController operations for Departamento
- name: elemento
  description: |
    ElementoController operations for Elemento
- name: elementos_institucion
  description: |
    ElementosInstitucionController operations for ElementosInstitucion
- name: elementos_proveedor
  description: |
    ElementosProveedorController operations for ElementosProveedor
- name: estado
  description: |
    EstadoController operations for Estado
- name: etc
  description: |
    EtcController operations for Etc
- name: institucion
  description: |
    InstitucionController operations for Institucion
- name: jornada
  description: |
    JornadaController operations for Jornada
- name: menu
  description: |
    MenuController operations for Menu
- name: municipio
  description: |
    MunicipioController operations for Municipio
- name: municipios_proveedor
  description: |
    MunicipiosProveedorController operations for MunicipiosProveedor
- name: periodo
  description: |
    PeriodoController operations for Periodo
- name: persona
  description: |
    PersonaController operations for Persona
- name: plan
  description: |
    PlanController operations for Plan
- name: preparacion
  description: |
    PreparacionController operations for Preparacion
- name: preparaciones_componente
  description: |
    PreparacionesComponenteController operations for PreparacionesComponente
- name: producto
  description: |
    ProductoController operations for Producto
- name: productos_preparacion
  description: |
    ProductosPreparacionController operations for ProductosPreparacion
- name: productos_proveedor
  description: |
    ProductosProveedorController operations for ProductosProveedor
- name: proveedor
  description: |
    ProveedorController operations for Proveedor
- name: rango_edad
  description: |
    RangoEdadController operations for RangoEdad
- name: rangos_preparacion
  description: |
    RangosPreparacionController operations for RangosPreparacion
- name: rol
  description: |
    RolController operations for Rol
- name: rol_persona_institucion
  description: |
    RolPersonaInstitucionController operations for RolPersonaInstitucion
- name: tipo_alimento
  description: |
    TipoAlimentoController operations for TipoAlimento
- name: tipo_institucion
  description: |
    TipoInstitucionController operations for TipoInstitucion
- name: tipo_minuta
  description: |
    TipoMinutaController operations for TipoMinuta
- name: tipo_modalidad
  description: |
    TipoModalidadController operations for TipoModalidad
- name: total_planeacion
  description: |
    TotalPlaneacionController operations for TotalPlaneacion
- name: unidad_medida
  description: |
    UnidadMedidaController operations for UnidadMedida
- name: waybill
  description: |
    WaybillController operations for Waybill
- name: waybill_temporal
  description: |
    WaybillTemporalController operations for WaybillTemporal
- name: waybill_temporal_cuatro
  description: |
    WaybillTemporalCuatroController operations for WaybillTemporalCuatro
- name: waybill_temporal_dos
  description: |
    WaybillTemporalDosController operations for WaybillTemporalDos
